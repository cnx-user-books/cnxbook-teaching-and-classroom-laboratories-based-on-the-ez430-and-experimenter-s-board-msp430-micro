<document xmlns="http://cnx.rice.edu/cnxml" xmlns:md="http://cnx.rice.edu/mdml">
  <title>Laboratory Signal Acquisition: Lab2 - SAR ADC12 conversion</title>
  <metadata>
  <md:content-id>m23546</md:content-id><md:title>Laboratory Signal Acquisition: Lab2 - SAR ADC12 conversion</md:title>
  <md:abstract>Using the MSP-EXP430FG4618 Development Tool and the MSP430FG4618 device explore the ADC12 and OA modules. The test voltage is generated in the DAC12 module (channel 0) modifying the DAC12_ODAT register's value. The analogue voltage is amplified by the OA module. Afterwards this signal is applied to ADC12 input to be converted. Compare the DAC12_ODAT and the ADC12MEM0 values.</md:abstract>
  <md:uuid>699e190d-cdac-4372-bc0f-0f52f7f48653</md:uuid>
</metadata>

<content>
    <section id="id18122704">
      <title>Laboratory Signal Acquisition: Lab2 - SAR ADC12 conversion</title>
      <section id="id18807604">
        <title>Introduction</title>
        <para id="id4433799">This laboratory gives examples of the uses of the ADC types available in the hardware development kits. A different laboratory is developed for each kit, taking into account that both the ADC10 and the SD16_A laboratories implement a temperature data logger. The ADC12 laboratory also uses operational amplifiers to perform the analogue signal conditioning.</para>
      </section>
      <section id="id3904511">
        <title>Overview</title>
        <para id="id18116346">This laboratory 

<link url="http://cnx.org/content/m23546/latest/Lab2_ADC.c" window="new">(Lab2_ADC.c)</link>

 examines the ADC12 and OA modules using the MSP-EXP430FG4618 Development Tool (MSP430FG4618 device). The test voltage is generated by the DAC12 channel 0, available in DAC12_ODAT register. The analogue signal is conditioned by the OA module (amplitude change), configured as non-inverting operational amplifier. Afterwards, this signal is applied to the ADC12 input to be converted. Compare the DAC12_ODAT and the ADC12MEM0 values.</para>
      </section>
      <section id="id3991208">
        <title>Resources</title>
        <para id="id18033021">The DAC12 module uses the same internal reference voltage as the ADC12 module (V<sub>REF+</sub> = 2.5 V).</para>
        <para id="id18210944">The OA module is configured as Non-inverting PGA with unity gain. The Non-inverting input is the DAC0 internal while the output is connected to internal/external A1 of the ADC12. The ADC12 sample-and-hold time is configured to be 64 ADC12CLK cycles. It performs a single-channel, single-conversion using ADC12OSC/1 as the clock source. </para>
        <para id="id18052852">The resources used by the application (following the signal modification steps) are:</para>
        <para id="id18052857">- DAC12;</para>
        <para id="id17249905">- OA;</para>
        <para id="id18030122">- ADC12;</para>
        <para id="id18030126">- Timer_A;</para>
        <para id="id4412602">- Interrupts.</para>
      </section>
      <section id="id11639186">
        <title>Software application organization</title>
        <para id="id18107336">The laboratory is organized following its working flow chart:</para>
        <para id="id12343304">- Peripheral initialization phase, finishing with the MSP430 in LPM3;</para>
        <para id="id12343309">- ISR phase, consisting of a Timer_A overflow service routine that triggers a new ADC12 conversion and it is responsible by the end of conversion.</para>
        <para id="id3844740">The application starts by stopping the Watchdog Timer.</para>
        <para id="id16622405">The system clock is configured by the FLL+ at 4.199304 MHz (128 x 32768Hz).</para>
        <para id="id18723826">The DAC12 module is configured to present a null voltage (0 V) at the output. It uses the ADC12 internal 2.5 V reference voltage. The DAC12’s output is configured with 12-bit resolution, in straight binary. DAC12 uses the full-scale output with a Medium speed/current.</para>
        <para id="id19550202">The OA module is configured as non-inverting PGA, the input signal (DAC0 internal) being in the rail-to-rail range. The output of the OA is connected to internal/external A1.</para>
        <para id="id12956583">The ADC12 is configured to perform a single-channel (channel A1), single-conversion. The configuration includes the activation of the same internal reference voltage as the DAC12. The ADC12 clock source is ADC12OSC, with the sample-and-hold time selected as 64 ADC12CLK cycles.</para>
        <para id="id17478539">The Timer_A is configured to use the ACLK as the clock source. It will count in continuous mode (TACCR0 counts up to 0FFFFh) and generate an interrupt to update the ADC12MEM. When the interrupt is serviced, the MSP430 enters into LPM3.</para>
      </section>
      <section id="id18196703">
        <title>System configuration</title>
        <section id="id14402617">
          <title>ADC12 configuration:</title>
          <para id="id18187688">The ADC12 module is configured in order to have the following characteristics:</para>
          <para id="id4507779">- Single-channel, single-conversion operation;</para>
          <para id="id19606629">- Uses the internal signal V<sub>REF+</sub> (2.5 V) as reference voltage;</para>
          <para id="id17630117">- The sample-and-hold time must be 64 ADC12CLK cycles;</para>
          <para id="id18060450">- The conversion result must be available on ADC12MEM0;</para>
          <para id="id16828216">- The sample-and-hold clock source is defined by software.</para>
          <code id="id14247418" display="block">ADC12CTL0 |= SHT02|REF2_5V|REFON|ADC12ON|ENC|ADC12SC;
    //SHT1x (Sample-and-hold time) = 0000b -&gt; N/A
    //SHT0x (Sample-and-hold time) = 0010b -&gt; 64 ADC12CLK
    //MSC (Multiple sample and conversion) = 0b -&gt; N/A
    //REF2_5V (Reference generator voltage) = 1b -&gt; 2.5 V
    //REFON (Reference generator on) = 1b -&gt; Reference on
    //ADC12ON (ADC12 on) = 1b -&gt; ADC12 on
    //ADC12OVIE (overflow-int. enable) = 0b -&gt; disabled
    //ADC12TOVIE (conversion-time-overflow int enable) = 0b
    // -&gt; disabled
    //ENC (Enable conversion) = 0b -&gt; enable configuration
    //ADC12SC (Start conversion) = 1b -&gt; Start conversion

ADC12CTL1 = CSTARTADD_0; // Start MEM0, TB1, Rpt Sing.
    //CSTARTADDx (Conv. start address.) = 0000b -&gt; ADC12MEM0
    //SHSx (Sample-and-hold source) = 00b -&gt; ADC12SC bit
    //SHP (Sample-and-hold pulse-mode select) = 0b
    // -&gt; SAMPCON is sourced from the sample-input signal
    //ISSH (Invert signal S-H) = 0b -&gt; not inverted
    //ADC12DIVx (ADC12 clock divider) = 000b -&gt; /1
    //ADC12SSELx (ADC12 clock source) = 00b -&gt; ADC12OSC
    //CONSEQx (Conversion sequence mode) = 00b -&gt; Single-
    // channel, single-conversion
    //ADC12BUSY (ADC12 busy) = xb -&gt; read only
    </code>
          <para id="id18092648"/>
          <para id="id18092651">The ADC12 module operates with reference voltages: V<sub>R+</sub> = V<sub>REF+</sub> and V<sub>R</sub>- = AV<sub>SS</sub>. The channel selected to perform the analogue-to-digital conversion is channel A1. This channel is internally connected the OA0’s output.</para>
          <code id="id16450757" display="block">ADC12MCTL0 = INCH_1 | SREF_1;
    //EOS (End of sequence) = 0b -&gt; Not Used
    //SREFx (Select ref.) = 001b -&gt; VR+=VREF+/VR-=AVSS
    //INCHx (Input channel select) = 0001b -&gt; A1
    </code>
        </section>
        <section id="id4081304">
          <title>DAC12 configuration:</title>
          <code id="id18246665" display="block">DAC12_0DAT = 0x00; // DAC_0 output 0V
    
DAC12_0CTL = DAC12IR | DAC12AMP_5 | DAC12ENC;
    //DAC_0 -&gt; P6.6
    //DAC_1 -&gt; P6.7
    //DAC reference Vref
    //12 bits resolution
    //Immediate load
    //DAC full scale output
    //Medium speed/
    //Straight binary
    //Not grouped
    </code>
        </section>
        <section id="id18250945">
          <title>OA0 configuration</title>
          <para id="id18157547">The OA module of the MSP430FG4168 has three operational amplifiers with wide utilization flexibility. For this laboratory it is set up using the OA0 in non-Inverting PGA mode with the following configuration:</para>
          <para id="id11729586">- The inverting input is connected to the DAC12 channel 0;</para>
          <para id="id18818865">- The amplifier gain is configured as unity;</para>
          <para id="id18818869">- The input is configured in rail-to-rail mode;</para>
          <para id="id18343626">- The output is connected to the channel A1.</para>
          <code id="id18143173" display="block">OA0CTL1 |= OAFC_4 | OAFBR_0;
    //OAFBRx (feedback resistor) = 000b -&gt; Tap 0 (G=1)
    //OAFCx (OAx function) = 100b -&gt; Non-inverting PGA
    //OARRIP = 0b -&gt; OAx input range is rail-to-rail

OA0CTL0 |= OAP_2 | OAPM_3 | OAADC1;
    //OANx (Inverting input) = XXb -&gt; not important
    //OAPx (Non-inverting input) = 10b -&gt; DAC0 internal
    //OAPMx (Slew rate select) = 11b -&gt; Fast
    //OAADC1 (OA output) = 1b -&gt; output connected to A1
    //OAADC0 (OA output) = 0b -&gt; output not connected A12
    </code>
        </section>
        <section id="id4384924">
          <title>ADC12 ISR</title>
          <code id="id3553835" display="block">#pragma vector=ADC12_VECTOR
__interrupt void ADC_ISR(void)
{
 int x;
 x = ADC12MEM0; // Reads data 
 ADC12CTL0 |= ADC12SC; // Start new conversion
}
    </code>
        </section>
        <section id="id18162338">
          <title>Timer_A ISR</title>
          <code id="id14314154" display="block">#pragma vector=TIMERA1_VECTOR
__interrupt void TimerA_ISR (void)
{
  ADC12CTL0 &amp;= ~ADC12SC; //start new conversion
  TACTL &amp;= ~TAIFG;
}
    </code>
          <para id="id16810641"/>
        </section>
      </section>
      <section id="id18805501">
        <title>Analysis of operation</title>
        <para id="id18142215">This laboratory uses the previous modules to construct an analogue signal chain as shown in Figure 1.</para>
        <figure id="id16609706">
          <title>Analogue signal chain structure.</title>
          <media id="id16609706_media" alt="">
            <image mime-type="image/png" src="../../media/graphics1-9600.png" id="id16609706__onlineimage" height="180" width="510"/>
          </media>
        </figure>
        <para id="id18837122">The input voltage V<sub>IN</sub> is in the range 0 V and 2.5 V, with a resolution of:</para>
        <para id="id18103600">ΔV<sub>IN</sub> = ( 2.5 x V<sub>REF</sub> ) / 2<sup>12</sup> = 0.6 mV</para>
        <para id="id18203763">The V<sub>IN</sub> value is controlled by the value in the DAC12_0DATA register.</para>
        <para id="id18254763">The output voltage V<sub>o</sub> has the same characteristics as the input voltage, but scaled by a multiplication factor (gain), attributed by the OA. The OA gain is selectable through the OAFBR field in the OA0CTL1 register.</para>
        <para id="id18104327">The V<sub>o</sub> conversion result is stored in the ADC12MEM0 register.</para>
        <para id="id4256558">Once the signal chain modules are configured in accordance with the previous steps, initiate the experiment by completing the file, compiling it and running it on the Experimenter’s board. For the evaluation of the peripherals discussed during this laboratory, set a breakpoint on the ADC12_ISR and perform the following operations:</para>
        <para id="id16951264">- Configure the DAC12_0DATA register with the value 0xFF. With the aid of a voltmeter, measure the analogue input voltage A6 (DAC12 channel 0 output). The value should be in the region of 0.15 V;</para>
        <para id="id3471615">- Measure the input voltage A1 (OA0’s output). The voltage value should be the same;</para>
        <para id="id18141000">- Execute the code. Verify the ADC12’s conversion result. The value should be similar to the one of the DAC12_0DATA register;</para>
        <para id="id17628137">- Double the amplifier gain (2x). Verify the voltage at A0. It should be the double of the input voltage A1 (OA0’s output) given in step 2;</para>
        <para id="id18187460">- Execute the code. Verify the ADC12’s conversion result. The value should be two times the value of the DAC12_0DATA register;</para>
        <para id="id3427603">- Execute further modifications in order to evaluate the digital-to-analogue and analogue-to-digital conversion. Do not exceed the Vo maximum value (2.5 V).</para>
        <para id="id18153142">This example and many others are available on the MSP430 Teaching ROM. </para>
        <para id="id18153147">Request this ROM, and our other Teaching Materials here <link url="https://www-a.ti.com/apps/dspuniv/teaching_rom_request.asp">https://www-a.ti.com/apps/dspuniv/teaching_rom_request.asp</link></para>
      </section>
    </section>
  </content>
</document>