<document xmlns="http://cnx.rice.edu/cnxml" xmlns:md="http://cnx.rice.edu/mdml">
  <title>Laboratory LCD controller: Lab1 - LCD message display</title>
  <metadata>
  <md:content-id>m23558</md:content-id><md:title>Laboratory LCD controller: Lab1 - LCD message display</md:title>
  <md:abstract>Using the MSP-EXP430FG4618 Development Tool and the MSP430FG4618 device present a message on the LCD Basic Timer1.</md:abstract>
  <md:uuid>7660b228-0368-48f6-a684-1b2ac34a2c34</md:uuid>
</metadata>

<content>
    <section id="id8749690">
      <title>Laboratory LCD controller: Lab1 - LCD message display</title>
      <section id="id9166566">
        <title>Introduction</title>
        <para id="id8507039">This hands-on laboratory consists of configuring the LCD_A controller of the MSP430FG4618 device of the Experimenter’s board to display a message on the LCD display. This laboratory has been developed for Code Composer Essentials version 3 software development tool only.</para>
      </section>
      <section id="id8507044">
        <title>Overview</title>
        <para id="id8871420">This laboratory will explore the LCD_A controller of the MSP430FG4618 device included on the Experimenter’s board. This application (<link url="http://cnx.org/content/m23558/latest/Lab1_LCD.c" window="new"> Lab1_LCD.c</link>) demonstrates the activation of various LCD segments.</para>
      </section>
      <section id="id7542849">
        <title>Resources</title>
        <para id="id8863119">The Experimenter’s board uses a LCD, which does not have its own controller. The operation is controlled by MSP430FG4618.</para>
        <para id="id9170033">The interface between these two components is described in the Experimenter’s Board datasheet <link url="http://cnx.org/content/m23558/latest/SBLCDA4_Specification.pdf" window="new"> slau213a.pdf </link>
</para>
        <para id="id9172575">It is also recommended that the LCD datasheet be read.</para>
        <para id="id8575296">Based on this information, it is possible to define the values to write to each of the memory registers to turn on the desired segments, or to set several of them, as is the case with numbers. The definitions are listed in  <link url="http://cnx.org/content/m23558/latest/LCD_defs.h" window="new"> LCD_defs.h</link>.</para>
        <para id="id9165024">From analysis of the Experimenter’s Board schematics, it can be seen that there is a 10 µF between the LCDCAP pin and ground, which means it is possible to use the charge pump.</para>
        <para id="id8556882">The segments shared by the I/O function are not used by the LCD, being connected to the segments S4 to S25. The four lines COM0, COM1, COM2, and COM3 are used. The last three lines are shared by ports P5.2, P5.3 and P5.4, respectively. The LCD is operated in 4-mux mode.</para>
        <para id="id8773788"/>
        <para id="id8765270">The pins R03, R13, R23 and LCDCAP\R33 are used to provide the V5, V4, V3, V2 and V1 (V<sub>LCD</sub>) voltages, using an external resistor network. They are available at Header H5.</para>
        <para id="id8796454">In the current Experimenter’s Board configuration, it is possible to select the AV<sub>ss</sub> or charge pump to provide the V1 (V<sub>LCD</sub>), V2, V3, V4 and V5 voltages. These voltages are only generated when LCD_A module and the ACLK clock are active. This allows the use of low power mode 3 (LPM3).</para>
        <para id="id6987775">Timer_A, together with the TACCR0 unit are used to generate an interrupt once every second. LED1 and LED2 are switched at each Timer_A interrupt.</para>
        <para id="id7134858">The push button SW1 is used to change the value of voltage generated by the charge pump. The push button SW2 is used to change the LCD frequency.</para>
      </section>
      <section id="id8858778">
        <title>Software application organization</title>
        <para id="id8810850">The application starts by configuring the Ports P5.2, P5.3, P5.4 to special function COM1, COM2 and COM3, respectively. The function of COM0 is not shared with the digital I/O functions.</para>
        <para id="id8609460">Then, the pins with multiplexed functions are selected to perform the functions necessary to control the LCD segments.</para>
        <para id="id8885635">The LCD_A control register and the voltage configuration register are also configured.</para>
        <para id="id8881011">There then follows the execution of the LCD clear routine <code display="inline">LCD_all_off()</code>, which ensures that all segments of the LCD are off.</para>
        <para id="id8072499">Timer_A is configured with its TACCRO unit to generate an interrupt once every second. The ISR generates the memory clock with <emphasis>msec</emphasis>, <emphasis>sec</emphasis> and <emphasis>min</emphasis>, and also connects/disconnects the remaining LCD symbols.</para>
        <para id="id8914550">The port pins P2.1 and P2.2 drive LED2 and LED1, respectively. Hence, these ports are configured as digital outputs.</para>
        <para id="id8652345"/>
        <para id="id8892148">Push buttons SW1 and SW2 have the capacity to generate an interrupt through a change at ports P1.0 and P1.2 respectively. The interrupt ISR, after decoding its source, modifies the LCD operation frequency or modifies the VLCD voltage.</para>
        <para id="id9163716">Finally, all the interrupts are activated and the system enters low power mode LPM3.</para>
      </section>
      <section id="id8597852">
        <title>System configuration</title>
        <section id="id8636930">
          <title>LCD_A interface with the LCD configuration</title>
          <para id="id8555888">Select the function COM1, COM2 and COM3. What is the value to write to these registers?</para>
          <code id="id8075040" display="block">P5DIR |= 0x1E; // Ports P5.2, P5.3 and P5.4 as outputs
P5SEL |= 0x1E; // Ports P5.2, P5.3 and P5.4 as special function (COM1, COM2 and COM3)
    </code>
          <para id="id8905893">The LCD segments are controlled by the S4 to S25 LCD memory segments. Activate these segments by writing to correct value to the following register:</para>
          <code id="id8863053" display="block">LCDAPCTL0 = LCDAPCTL0 = LCDS24 | LCDS20 | LCDS16 | LCDS12 | LCDS8 | LCDS4; // Enable S4 to S25
    </code>
        </section>
        <section id="id9022080">
          <title>LCD operation frequency</title>
          <para id="id9193648">The LCD is to operate in 4-mux mode, with a 30 Hz to 100 Hz refresh frequency. It uses the following equation to determine the LCD operation frequency, f<sub>LCD</sub>:</para>
          <para id="id9175414">f<sub>LCD</sub> = 2 x mux x f<sub>frame</sub></para>
          <para id="id8045009">Choose the frequency that provides greatest energy savings.</para>
        </section>
        <section id="id8045015">
          <title>LCD_A configuration</title>
          <para id="id8638973">The LCD_A module is to be activated in 4-mux mode from a 32768 Hz clock. What value should be written to the following register?</para>
          <code id="id8399437" display="block">LCDACTL = LCDFREQ_192 | LCD4MUX; // (ACLK = 32768)/192
    // and 4-mux LCD
LCDACTL |= LCDSON | LCDON; // LCD_A and Segments on
    </code>
          <para id="id9178235">Use the charge pump to internally generate all the voltages necessary for the operation of the LCD, using a bias 1/3. What is the value to write to the register?</para>
          <para id="id7877523">
            <code display="inline">LCDAVCTL0 = LCDCPEN; // Charge pump enable</code>
          </para>
          <para id="id9127349">The charge pump generates a LCD voltage of 3.44 volts. Configure the following register:</para>
          <para id="id6105598">
            <code display="inline">LCDAVCTL1 = VLCD_3_44; // VLCD = 3.44 V</code>
          </para>
        </section>
        <section id="id7051122">
          <title>Timer_A configuration</title>
          <para id="id8067584">The Timer_A generates an interrupt once every second. It uses the TACCR0 unit. Configure the following registers:</para>
          <code id="id8799100" display="block">TACCTL0 = CCIE; // TACCR0 interrupt enabled
TACCR0 = 3268; // this count correspond to 1 msec
TACTL = TASSEL_1 | MC_1 | ID_0; // ACLK, up mode
    </code>
        </section>
        <section id="id8039271">
          <title>Output ports configuration</title>
          <para id="id8924758">Configure the ports connected to LED1 and LED2 in order to make one of them active and the other inactive at system start up:</para>
          <code id="id9182372" display="block">P2DIR |= 0x06; // P2.1 and P2.2 as output
P2OUT |= 0x04; // LED2 off and LED1 on
    </code>
          <para id="id8122835"/>
        </section>
        <section id="id8122840">
          <title>Input ports configuration</title>
          <para id="id8105349">The push buttons SW1 and SW2 generate an interrupt on a low-to-high transition. Configure the necessary registers:</para>
          <code id="id9166258" display="block">P1DIR &amp;= ~0x03; // P1.0 and P1.1 digital inputs
P1IES |= 0x03; // low-to-high transition interrupts
P1IE |= 0x03; // enable port interrupts
    </code>
        </section>
      </section>
      <section id="id8518945">
        <title>Analysis of operation</title>
        <para id="id8490097">Compile the project, load it into microcontroller’s memory and execute the application. For each value of the operating frequency and voltage generated by the charge pump, measure the electrical current consumption. Draw a graph of these results and draw conclusions concerning the energy consumption.</para>
        <para id="id8587893">This example and many others are available on the MSP430 Teaching ROM. </para>
        <para id="id8729821">Request this ROM, and our other Teaching Materials here <link url="https://www-a.ti.com/apps/dspuniv/teaching_rom_request.asp">https://www-a.ti.com/apps/dspuniv/teaching_rom_request.asp</link></para>
      </section>
    </section>
  </content>
</document>